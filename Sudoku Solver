class Solution {
    public void solveSudoku(char[][] board) {
       solve(board);
    }
   static boolean solve(char[][] board)
    {
        for(int i=0;i<9;i++)
        {
            for(int j=0;j<9;j++)
            {
                if(board[i][j]=='.')
                {
                    for(char c='1';c<='9';c++)
                    {
                        if(isvalid(board,c,i,j))
                        {
                            board[i][j]=c;
                        if(solve(board))
                            return true;
                        else
                            board[i][j]='.';
                        }
                    }
                return false;
                }
            }
        }
       return true;
    }
    static boolean isvalid(char board[][],char ch,int row,int col)
    {
        for(int i=0;i<9;i++)
        {
            if(board[i][col]==ch)
            {
                return false;
            }
            if(board[row][i]==ch)
            {
                return false;
            }
            int m=3*(row/3)+i/3;
            int n=3*(col/3)+i%3;
            if(board[m][n]==ch)
               {
                   return false;
               }
        }
        return true;
    }

}
